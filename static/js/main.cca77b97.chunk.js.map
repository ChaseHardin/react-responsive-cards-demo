{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["chance","Chance","App","renderFooter","title","handleOnClick","alert","CardActions","IconButton","aria-label","onClick","generateCardDetails","n","name","description","paragraph","image","natural","min","max","details","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAQMA,EAAS,IAAIC,IAkCJC,MAhCf,WACE,IAAMC,EAAe,SAAAC,GACnB,IAAMC,EAAgB,kBAAMC,MAAMF,IAClC,OACE,eAACG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,aAAW,mBAAmBC,QAASL,EAAnD,SACE,cAAC,IAAD,MAEF,cAACG,EAAA,EAAD,CAAYC,aAAW,mBAAmBC,QAASL,EAAnD,SACE,cAAC,IAAD,UAMFM,EAAsBX,EAAOY,GAAE,WACnC,IAAMR,EAAQJ,EAAOa,OAErB,MAAO,CACLT,QACAU,YAAad,EAAOe,YACpBC,MAAM,wCAAD,OAA0ChB,EAAOiB,QAAQ,CAAEC,IAAK,EAAGC,IAAK,OAC7EhB,aAAcA,EAAaC,GAC3BC,cAAe,kBAAMC,MAAMF,OAE5B,IAEH,OACE,cAAC,IAAD,CAAOgB,QAAST,KC1BLU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cca77b97.chunk.js","sourcesContent":["import './App.css';\nimport Chance from 'chance'\nimport { Cards } from 'react-responsive-cards'\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share'\n\nconst chance = new Chance()\n\nfunction App() {\n  const renderFooter = title => {\n    const handleOnClick = () => alert(title)\n    return (\n      <CardActions>\n        <IconButton aria-label=\"add to favorites\" onClick={handleOnClick}>\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"add to favorites\" onClick={handleOnClick}>\n          <ShareIcon />\n        </IconButton>\n      </CardActions>\n    )\n  }\n\n  const generateCardDetails = chance.n(() => {\n    const title = chance.name();\n\n    return {\n      title,\n      description: chance.paragraph(),\n      image: `https://picsum.photos/500/500?images=${chance.natural({ min: 1, max: 100 })}`,\n      renderFooter: renderFooter(title),\n      handleOnClick: () => alert(title)\n    }\n  }, 24)\n\n  return (\n    <Cards details={generateCardDetails}/>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}